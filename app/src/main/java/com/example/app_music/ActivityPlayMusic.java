package com.example.app_music;

import android.media.MediaPlayer;
import android.os.Bundle;
import android.os.Handler;
import android.widget.ImageButton;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.material.bottomnavigation.BottomNavigationView;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.concurrent.TimeUnit;

public class ActivityPlayMusic extends AppCompatActivity {

    private MediaPlayer mediaPlayer;             // ƒê·ªëi t∆∞·ª£ng ph√°t nh·∫°c
    private SeekBar seekBar;                     // Thanh k√©o th·ªùi gian
    private TextView tvCurrentTime, tvTotalTime, tvSongName, tvArtist;
    private ImageButton btnPlayPause, btnNext, btnPrev;
    private BottomNavigationView bottomNav;
    private Handler handler = new Handler();

    private boolean isPlaying = false;           // Tr·∫°ng th√°i ph√°t nh·∫°c

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_play_music);

        // Kh·ªüi t·∫°o giao di·ªán
        initUI();

        // Thi·∫øt l·∫≠p MediaPlayer (ph√°t nh·∫°c)
        setupMedia();

        // Thi·∫øt l·∫≠p SeekBar
        setupSeekBar();

        // Thi·∫øt l·∫≠p n√∫t ƒëi·ªÅu khi·ªÉn
        setupControls();

        // Thi·∫øt l·∫≠p thanh ƒëi·ªÅu h∆∞·ªõng d∆∞·ªõi (avatar / l·ªùi b√†i h√°t)
        setupBottomNav();
    }

    // ======================================
    // üîπ √Ånh x·∫° view
    // ======================================
    private void initUI() {
        seekBar = findViewById(R.id.pm_seekbar);
        tvCurrentTime = findViewById(R.id.pm_tv_current_time);
        tvTotalTime = findViewById(R.id.pm_tv_total_time);
        tvSongName = findViewById(R.id.pm_tv_song_name);
        tvArtist = findViewById(R.id.pm_tv_artist);
        btnPlayPause = findViewById(R.id.pm_btn_play_pause);
        btnNext = findViewById(R.id.pm_btn_next);
        btnPrev = findViewById(R.id.pm_btn_prev);
        bottomNav = findViewById(R.id.pm_bottom_navigation);
    }

    // ======================================
    // üîπ Thi·∫øt l·∫≠p MediaPlayer ph√°t nh·∫°c
    // ======================================
    private void setupMedia() {
        try {
            // T·∫°o media player t·ª´ file nh·∫°c trong th∆∞ m·ª•c res/raw
            mediaPlayer = MediaPlayer.create(this, R.raw.song1);

            // Ki·ªÉm tra n·∫øu kh√¥ng t·∫°o ƒë∆∞·ª£c -> b√°o l·ªói
            if (mediaPlayer == null) {
                Toast.makeText(this, "Kh√¥ng th·ªÉ ph√°t file nh·∫°c (R.raw.song1)", Toast.LENGTH_LONG).show();
                return;
            }

            // G√°n th√¥ng tin b√†i h√°t (t·∫°m th·ªùi c·ªë ƒë·ªãnh)
            tvSongName.setText("T√™n b√†i h√°t m·∫´u");
            tvArtist.setText("Ca sƒ© th·ªÉ hi·ªán");

            // L·∫•y t·ªïng th·ªùi l∆∞·ª£ng b√†i h√°t v√† hi·ªÉn th·ªã
            int duration = mediaPlayer.getDuration();
            tvTotalTime.setText(formatTime(duration));
            seekBar.setMax(duration);

        } catch (Exception e) {
            e.printStackTrace();
            Toast.makeText(this, "L·ªói khi kh·ªüi t·∫°o MediaPlayer", Toast.LENGTH_SHORT).show();
        }
    }

    // ======================================
    // üîπ Thi·∫øt l·∫≠p n√∫t ƒëi·ªÅu khi·ªÉn (play / pause / next / prev)
    // ======================================
    private void setupControls() {
        btnPlayPause.setOnClickListener(v -> {
            if (mediaPlayer == null) {
                Toast.makeText(this, "MediaPlayer ch∆∞a s·∫µn s√†ng", Toast.LENGTH_SHORT).show();
                return;
            }

            if (isPlaying) {
                // N·∫øu ƒëang ph√°t -> t·∫°m d·ª´ng
                mediaPlayer.pause();
                btnPlayPause.setImageResource(R.drawable.ic_play_arrow);
            } else {
                // N·∫øu ƒëang d·ª´ng -> ph√°t
                mediaPlayer.start();
                btnPlayPause.setImageResource(R.drawable.ic_pause);
                updateSeekBar();
            }
            isPlaying = !isPlaying;
        });

        btnNext.setOnClickListener(v -> {
            // Ch·ª©c nƒÉng chuy·ªÉn b√†i (c√≥ th·ªÉ m·ªü r·ªông sau)
            Toast.makeText(this, "Ch·ª©c nƒÉng chuy·ªÉn b√†i (ch∆∞a h·ªó tr·ª£)", Toast.LENGTH_SHORT).show();
        });

        btnPrev.setOnClickListener(v -> {
            // Ch·ª©c nƒÉng quay l·∫°i b√†i (c√≥ th·ªÉ m·ªü r·ªông sau)
            Toast.makeText(this, "Ch·ª©c nƒÉng quay l·∫°i b√†i (ch∆∞a h·ªó tr·ª£)", Toast.LENGTH_SHORT).show();
        });
    }

    // ======================================
    // üîπ Thi·∫øt l·∫≠p SeekBar
    // ======================================
    private void setupSeekBar() {
        seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                if (mediaPlayer == null) return;

                if (fromUser) mediaPlayer.seekTo(progress);
                tvCurrentTime.setText(formatTime(mediaPlayer.getCurrentPosition()));
            }
            @Override public void onStartTrackingTouch(SeekBar seekBar) {}
            @Override public void onStopTrackingTouch(SeekBar seekBar) {}
        });
    }

    // ======================================
    // üîπ C·∫≠p nh·∫≠t SeekBar theo th·ªùi gian th·ª±c
    // ======================================
    private void updateSeekBar() {
        if (mediaPlayer == null) return;

        seekBar.setProgress(mediaPlayer.getCurrentPosition());
        tvCurrentTime.setText(formatTime(mediaPlayer.getCurrentPosition()));

        if (mediaPlayer.isPlaying()) {
            handler.postDelayed(this::updateSeekBar, 500);
        }
    }

    // ======================================
    // üîπ Thi·∫øt l·∫≠p thanh ƒëi·ªÅu h∆∞·ªõng d∆∞·ªõi (BottomNavigation)
    // ======================================
    private void setupBottomNav() {
        bottomNav.inflateMenu(R.menu.pm_bottom_navigation_menu);

        bottomNav.setOnItemSelectedListener(item -> {
            if (item.getItemId() == R.id.nav_lyrics) {
                showLyrics();
                return true;
            } else if (item.getItemId() == R.id.nav_avatar) {
                Toast.makeText(this, "Hi·ªÉn th·ªã avatar / animation ƒëƒ©a nh·∫°c", Toast.LENGTH_SHORT).show();
                return true;
            }
            return false;
        });
    }

    // ======================================
    // üîπ Hi·ªÉn th·ªã l·ªùi b√†i h√°t (ƒë·ªçc file trong raw)
    // ======================================
    private void showLyrics() {
        try {
            InputStream inputStream = getResources().openRawResource(R.raw.lyrics_song1);
            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
            StringBuilder lyrics = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                lyrics.append(line).append("\n");
            }
            reader.close();

            Toast.makeText(this, lyrics.toString(), Toast.LENGTH_LONG).show();

        } catch (Exception e) {
            e.printStackTrace();
            Toast.makeText(this, "Kh√¥ng t√¨m th·∫•y file l·ªùi b√†i h√°t (R.raw.lyrics_song1)", Toast.LENGTH_SHORT).show();
        }
    }

    // ======================================
    // üîπ H√†m ƒë·ªãnh d·∫°ng th·ªùi gian (mm:ss)
    // ======================================
    private String formatTime(int millis) {
        long minutes = TimeUnit.MILLISECONDS.toMinutes(millis);
        long seconds = TimeUnit.MILLISECONDS.toSeconds(millis) % 60;
        return String.format("%d:%02d", minutes, seconds);
    }

    // ======================================
    // üîπ Gi·∫£i ph√≥ng t√†i nguy√™n khi tho√°t Activity
    // ======================================
    @Override
    protected void onDestroy() {
        if (mediaPlayer != null) {
            if (mediaPlayer.isPlaying()) mediaPlayer.stop();
            mediaPlayer.release();
            mediaPlayer = null;
        }
        super.onDestroy();
    }
}
